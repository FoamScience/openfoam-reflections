# ---------------------------------------------------------------------------
#
# Create ESI OpenFOAM-based test image for OpenFOAM reflections
#
# Build
#   apptainer build reflections.sif reflections.def
#
# Note
#   apptainer version 1.3.1
#
# ---------------------------------------------------------------------------
Bootstrap: localimage
From: {{ CONTAINERS_DIR }}/basic/{{ BASE_CONTAINER }}.sif

%arguments
    BASE_CONTAINER=opencfd-openfoam
    OS_VERSION=24.04
    OPENMPI_VERSION=4.1.5
    OPENFOAM_VERSION=2312
    OPENFOAM_GIT_REF=default

%post
    # GET the repo
    git clone https://github.com/FoamScience/openfoam-reflections /opt/openfoam-reflections
    cd /opt/openfoam-reflections
    git checkout {{ REFERENCE }}
    cd -

    # Prereqs
    DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt --fix-broken install -y
    apt-get install -y libasio-dev
    # just to be safe
    sed -i 's/Compound<T>(/Compound(/g' /usr/lib/openfoam/openfoam{{ OPENFOAM_VERSION }}/src/OpenFOAM/lnInclude/token.H 

    # Golang
    curl -L -o /tmp/go1.22.4.linux-amd64.tar.gz https://go.dev/dl/go1.22.4.linux-amd64.tar.gz
    rm -rf /usr/local/go && tar -C /usr/local -xzf /tmp/go1.22.4.linux-amd64.tar.gz
    export PATH=$PATH:/usr/local/go/bin

    # Build
    /bin/bash -c "export PATH=$PATH:/usr/local/go/bin && source /usr/lib/openfoam/openfoam{{ OPENFOAM_VERSION }}/etc/bashrc && cd /opt/openfoam-reflections && ./build.sh"

    # Metadata
    reflections_ref=`git -C /opt/openfoam-reflections rev-parse --short HEAD`
    crow_ref=`git -C /opt/openfoam-reflections/Crow rev-parse --short HEAD`
    go_version=`go version | cut -f3 -d' '`
    jq --arg app reflections --arg commit $reflections_ref \
        --arg crow $crow_ref \
        --arg go $go_version \
        '.[$app] |= if . == null then
        {
            commit: $commit,
            crow_commit: $crow,
            cmd_endpoint: "/opt/openfoam-reflections/endpoint/endpoint",
            cmd_tui: "/opt/openfoam-reflections/TUI/tui",
            go_version: $go,
        }
        else . +
        {
            commit: $commit,
            crow_commit: $crow,
            cmd_endpoint: "/opt/openfoam-reflections/endpoint/endpoint",
            cmd_tui: "/opt/openfoam-reflections/TUI/tui",
            go_version: $go,
        } end' /apps.json > /tmp/apps.json
    mv /tmp/apps.json /apps.json

%environment
    export XDG_CACHE_HOME="/tmp"
    export PATH=$PATH:/usr/local/go/bin

%runscript
    /bin/bash -c 'cd /usr/lib/openfoam/openfoam{{ OPENFOAM_VERSION }} && source etc/bashrc && mkdir -p $FOAM_USER_LIBBIN && mkdir -p $FOAM_USER_APPBIN'
    if [ $# -eq 0 ]; then
        /bin/bash -c "source /usr/lib/openfoam/openfoam{{ OPENFOAM_VERSION }}/etc/bashrc && /bin/bash --login"
    else
        /bin/bash -c "source /usr/lib/openfoam/openfoam{{ OPENFOAM_VERSION }}/etc/bashrc && $@"
    fi
%labels
    Description OpenFOAM reflections for easier and maintainable UX builds
